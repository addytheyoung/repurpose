{"ast":null,"code":"var _jsxFileName = \"/Users/ayoung/repurpose/src/DialogPrice.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { Input } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue } from \"@material-ui/core/colors\";\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  const [min, setMin] = React.useState(\"$\");\n  const [max, setMax] = React.useState(\"$\");\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignSelf: \"center\",\n      textAlign: \"center\",\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginTop: 30,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: min,\n    placeholder: \"Min price $\",\n    type: \"text\",\n    onChange: e => checkKey(e),\n    style: {\n      width: 100,\n      marginRight: 10,\n      marginLeft: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), \"-\", /*#__PURE__*/React.createElement(Input, {\n    value: max,\n    placeholder: \"Max price $\",\n    type: \"text\",\n    onChange: e => checkKey(e, true),\n    style: {\n      width: 100,\n      marginLeft: 10,\n      marginRight: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#a1a1a1\",\n      padding: 10,\n      width: 100,\n      alignSelf: \"center\",\n      textAlign: \"center\",\n      borderRadius: 5,\n      marginTop: 50,\n      marginBottom: 50\n    },\n    onClick: () => saveContent(props, min, max, handleClose),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"SAVE\"));\n\n  function checkKey(event, max) {\n    const val = event.target.value[event.target.value.toString().length - 1];\n\n    for (var i = 1; i < event.target.value.toString().length; i++) {\n      if (event.target.value.toString().charAt(i) == \"$\") {\n        return;\n      }\n    }\n\n    if (event.target.value[0] == \"$\" && (val == \"$\" || val == 0 || val == 1 || val == 2 || val == 3 || val == 4 || val == 5 || val == 6 || val == 7 || val == 8 || val == 9)) {\n      if (max) {\n        setMax(event.target.value);\n      } else {\n        setMin(event.target.value);\n      }\n    }\n  }\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nfunction saveContent(props, min, max, handleClose) {\n  if (max >= min) {\n    props.changePrice(min, max);\n    handleClose();\n  } else {\n    alert(\"Bad price\");\n  }\n}\n\nexport default function SimpleDialogDemo(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleClickOpen,\n    id: \"price\",\n    style: {\n      borderWidth: 1,\n      borderRadius: 20,\n      borderStyle: \"solid\",\n      padding: 10,\n      paddingLeft: 15,\n      paddingRight: 15,\n      borderColor: \"#a1a1a1\",\n      marginLeft: 5,\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(SimpleDialog, {\n    changePrice: props.changePrice,\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ayoung/repurpose/src/DialogPrice.js"],"names":["React","PropTypes","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","Input","AddIcon","Typography","blue","emails","useStyles","avatar","backgroundColor","color","SimpleDialog","props","classes","onClose","selectedValue","open","min","setMin","useState","max","setMax","handleClose","handleListItemClick","value","alignSelf","textAlign","marginTop","display","flexDirection","justifyContent","alignItems","e","checkKey","width","marginRight","marginLeft","padding","borderRadius","marginBottom","saveContent","event","val","target","toString","length","i","charAt","propTypes","func","isRequired","bool","string","changePrice","alert","SimpleDialogDemo","setOpen","setSelectedValue","handleClickOpen","borderWidth","borderStyle","paddingLeft","paddingRight","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { Input } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n  const [min, setMin] = React.useState(\"$\");\n  const [max, setMax] = React.useState(\"$\");\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <div style={{ alignSelf: \"center\", textAlign: \"center\", marginTop: 30 }}>\n        Price\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginTop: 30,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <Input\n          value={min}\n          placeholder=\"Min price $\"\n          type=\"text\"\n          onChange={e => checkKey(e)}\n          style={{ width: 100, marginRight: 10, marginLeft: 100 }}\n        />\n        {\"-\"}\n        <Input\n          value={max}\n          placeholder=\"Max price $\"\n          type=\"text\"\n          onChange={e => checkKey(e, true)}\n          style={{ width: 100, marginLeft: 10, marginRight: 100 }}\n        />\n      </div>\n\n      <div\n        style={{\n          backgroundColor: \"#a1a1a1\",\n          padding: 10,\n          width: 100,\n          alignSelf: \"center\",\n          textAlign: \"center\",\n          borderRadius: 5,\n          marginTop: 50,\n          marginBottom: 50\n        }}\n        onClick={() => saveContent(props, min, max, handleClose)}\n      >\n        SAVE\n      </div>\n    </Dialog>\n  );\n\n  function checkKey(event, max) {\n    const val = event.target.value[event.target.value.toString().length - 1];\n    for (var i = 1; i < event.target.value.toString().length; i++) {\n      if (event.target.value.toString().charAt(i) == \"$\") {\n        return;\n      }\n    }\n    if (\n      event.target.value[0] == \"$\" &&\n      (val == \"$\" ||\n        val == 0 ||\n        val == 1 ||\n        val == 2 ||\n        val == 3 ||\n        val == 4 ||\n        val == 5 ||\n        val == 6 ||\n        val == 7 ||\n        val == 8 ||\n        val == 9)\n    ) {\n      if (max) {\n        setMax(event.target.value);\n      } else {\n        setMin(event.target.value);\n      }\n    }\n  }\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nfunction saveContent(props, min, max, handleClose) {\n  if (max >= min) {\n    props.changePrice(min, max);\n    handleClose();\n  } else {\n    alert(\"Bad price\");\n  }\n}\n\nexport default function SimpleDialogDemo(props) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <div\n        onClick={handleClickOpen}\n        id=\"price\"\n        style={{\n          borderWidth: 1,\n          borderRadius: 20,\n          borderStyle: \"solid\",\n          padding: 10,\n          paddingLeft: 15,\n          paddingRight: 15,\n          borderColor: \"#a1a1a1\",\n          marginLeft: 5,\n          marginRight: 5\n        }}\n      >\n        Price\n      </div>\n      <SimpleDialog\n        changePrice={props.changePrice}\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}