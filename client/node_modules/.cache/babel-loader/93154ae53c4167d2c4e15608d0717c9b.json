{"ast":null,"code":"var _jsxFileName = \"/Users/ayoung/repurpose/src/CheckoutForm.js\";\nimport React from \"react\";\nimport { ElementsConsumer, CardElement } from \"@stripe/react-stripe-js\";\nimport CardSection from \"./CardSection\";\n\nclass CheckoutForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = async event => {\n      // We don't want to let default form submission happen here,\n      // which would refresh the page.\n      event.preventDefault();\n      const {\n        stripe,\n        elements\n      } = this.props;\n\n      if (!stripe || !elements) {\n        // Stripe.js has not yet loaded.\n        // Make  sure to disable form submission until Stripe.js has loaded.\n        return;\n      }\n\n      const card = elements.getElement(CardElement);\n      const result = await stripe.createToken(card);\n\n      if (result.error) {\n        // Show error to your customer.\n        console.log(result.error.message);\n      } else {\n        // Send the token to your server.\n        // This function does not exist yet; we will define it in the next step.\n        stripeTokenHandler(result.token);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !this.props.stripe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Confirm order\"));\n  }\n\n}\n\nexport default function InjectedCheckoutForm() {\n  return /*#__PURE__*/React.createElement(ElementsConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, ({\n    stripe,\n    elements\n  }) => /*#__PURE__*/React.createElement(CheckoutForm, {\n    stripe: stripe,\n    elements: elements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n}\n\nasync function stripeTokenHandler(token) {\n  const paymentData = {\n    token: token.id\n  }; // Use fetch to send the token ID and any other payment data to your server.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n  const response = await fetch(\"/charge\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(paymentData)\n  }); // Return and display the result of the charge.\n\n  console.log(response.json()); //   return response.json();\n}","map":{"version":3,"sources":["/Users/ayoung/repurpose/src/CheckoutForm.js"],"names":["React","ElementsConsumer","CardElement","CardSection","CheckoutForm","Component","handleSubmit","event","preventDefault","stripe","elements","props","card","getElement","result","createToken","error","console","log","message","stripeTokenHandler","token","render","InjectedCheckoutForm","paymentData","id","response","fetch","method","headers","body","JSON","stringify","json"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,yBAA9C;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,YADyC,GAC1B,MAAMC,KAAN,IAAe;AAC5B;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAuB,KAAKC,KAAlC;;AAEA,UAAI,CAACF,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD;;AAED,YAAME,IAAI,GAAGF,QAAQ,CAACG,UAAT,CAAoBX,WAApB,CAAb;AACA,YAAMY,MAAM,GAAG,MAAML,MAAM,CAACM,WAAP,CAAmBH,IAAnB,CAArB;;AAEA,UAAIE,MAAM,CAACE,KAAX,EAAkB;AAChB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,KAAP,CAAaG,OAAzB;AACD,OAHD,MAGO;AACL;AACA;AACAC,QAAAA,kBAAkB,CAACN,MAAM,CAACO,KAAR,CAAlB;AACD;AACF,KAzBwC;AAAA;;AA2BzCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,QAAQ,EAAE,CAAC,KAAKK,KAAL,CAAWF,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF;AAMD;;AAlCwC;;AAqC3C,eAAe,SAASc,oBAAT,GAAgC;AAC7C,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEd,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,kBACC,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAED,MAAtB;AAA8B,IAAA,QAAQ,EAAEC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAOD;;AAED,eAAeU,kBAAf,CAAkCC,KAAlC,EAAyC;AACvC,QAAMG,WAAW,GAAG;AAAEH,IAAAA,KAAK,EAAEA,KAAK,CAACI;AAAf,GAApB,CADuC,CAGvC;AACA;;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AACtCC,IAAAA,MAAM,EAAE,MAD8B;AAEtCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF6B;AAKtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf;AALgC,GAAZ,CAA5B,CALuC,CAavC;;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACO,IAAT,EAAZ,EAduC,CAevC;AACD","sourcesContent":["import React from \"react\";\nimport { ElementsConsumer, CardElement } from \"@stripe/react-stripe-js\";\n\nimport CardSection from \"./CardSection\";\n\nclass CheckoutForm extends React.Component {\n  handleSubmit = async event => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    const { stripe, elements } = this.props;\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make  sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const card = elements.getElement(CardElement);\n    const result = await stripe.createToken(card);\n\n    if (result.error) {\n      // Show error to your customer.\n      console.log(result.error.message);\n    } else {\n      // Send the token to your server.\n      // This function does not exist yet; we will define it in the next step.\n      stripeTokenHandler(result.token);\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <CardSection />\n        <button disabled={!this.props.stripe}>Confirm order</button>\n      </form>\n    );\n  }\n}\n\nexport default function InjectedCheckoutForm() {\n  return (\n    <ElementsConsumer>\n      {({ stripe, elements }) => (\n        <CheckoutForm stripe={stripe} elements={elements} />\n      )}\n    </ElementsConsumer>\n  );\n}\n\nasync function stripeTokenHandler(token) {\n  const paymentData = { token: token.id };\n\n  // Use fetch to send the token ID and any other payment data to your server.\n  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n  const response = await fetch(\"/charge\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(paymentData)\n  });\n\n  // Return and display the result of the charge.\n  console.log(response.json());\n  //   return response.json();\n}\n"]},"metadata":{},"sourceType":"module"}